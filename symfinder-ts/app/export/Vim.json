{
    "links": [
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/imswitcher.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/targets.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/targets.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/targets.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/targets.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line"
        },
        {
            "source": "experiments/Vim/src/cmd_line",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/ascii.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/ascii.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/bang.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/bang.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/breakpoints.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/breakpoints.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/close.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/close.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/history.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/history.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/jumps.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/jumps.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/marks.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/marks.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/move.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/move.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/print.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/print.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/read.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/read.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/redo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/redo.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/retab.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/retab.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/smile.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/smile.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/sort.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/sort.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/expression.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/expression.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/common"
        },
        {
            "source": "experiments/Vim/src/common",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/quoteMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching/quoteMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/tagMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching/tagMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/motion"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/common",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/number"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src/common/number",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/completion"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/completion/lineCompletionProvider.ts"
        },
        {
            "source": "experiments/Vim/src/completion",
            "type": "CHILD",
            "target": "experiments/Vim/src/completion/lineCompletionProvider.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/word.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/expression.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/util/externalCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/wrapping.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/decoration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/state/remapState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/globals.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/remapper.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/remapper.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/neovimValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/neovimValidator.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/vimrcValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/vimrcValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/expression.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/util/externalCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/history"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/history/historyFile.ts"
        },
        {
            "source": "experiments/Vim/src/history",
            "type": "CHILD",
            "target": "experiments/Vim/src/history/historyFile.ts"
        },
        {
            "source": "experiments/Vim/src/history",
            "type": "CHILD",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/jumps"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/jumps",
            "type": "CHILD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/jumps",
            "type": "CHILD",
            "target": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/wrapping.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandlerMap.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandlerMap.ts"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/modeHandlerMap.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/neovim"
        },
        {
            "source": "experiments/Vim/src/neovim",
            "type": "CHILD",
            "target": "experiments/Vim/src/neovim/neovim.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform"
        },
        {
            "source": "experiments/Vim/src/platform",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser"
        },
        {
            "source": "experiments/Vim/src/platform/browser",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser/constants.ts"
        },
        {
            "source": "experiments/Vim/src/platform/browser",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "source": "experiments/Vim/src/platform/browser",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser/history.ts"
        },
        {
            "source": "experiments/Vim/src/platform",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node"
        },
        {
            "source": "experiments/Vim/src/platform/node",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node/constants.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node/fs.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/platform/node/fs.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node/fs.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node/history.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/register"
        },
        {
            "source": "experiments/Vim/src/register",
            "type": "CHILD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/state"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/compositionState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/compositionState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/remapState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/remapState.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jump.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/taskQueue.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/taskQueue.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/paragraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/sentence.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/sentence.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/word.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations"
        },
        {
            "source": "experiments/Vim/src/transformations",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations/execute.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/execute.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "source": "experiments/Vim/src/transformations",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/util"
        },
        {
            "source": "experiments/Vim/src/util/child_process.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/child_process.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/child_process.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/externalCommand.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/externalCommand.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util/vscodeContext.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util/clipboard.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/taskQueue.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util/os.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/os.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/os.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/util/path.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/expression.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/expression.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/expression.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/syntaxes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandFold"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/util/clipboard.ts",
            "type": "EXPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "MarkerGenerator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "EXPORT",
            "target": "MarkerGenerator"
        },
        {
            "source": "experiments/Vim/src/platform/browser/history.ts",
            "type": "EXPORT",
            "target": "HistoryBase"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "AsciiCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "AsciiCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "EXPORT",
            "target": "AsciiCommand"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/util/vscodeContext.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/util/clipboard.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/taskQueue.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/util/logger.ts",
            "type": "EXPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "GotoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "GotoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "EXPORT",
            "target": "GotoCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "QuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/common/matching/quoteMatcher.ts",
            "type": "EXPORT",
            "target": "QuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WallCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WallCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "EXPORT",
            "target": "WallCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "HistoryFile"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "EXPORT",
            "target": "HistoryFile"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/jumps/jump.ts",
            "type": "EXPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "NumericString"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "NumericString"
        },
        {
            "source": "experiments/Vim/src/common/number/numericString.ts",
            "type": "EXPORT",
            "target": "NumericString"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "FileInfoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "FileInfoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "EXPORT",
            "target": "FileInfoCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ShCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ShCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "EXPORT",
            "target": "ShCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "experiments/Vim/src/util/vscodeContext.ts",
            "type": "EXPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ExitReplaceMode"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "EXPORT",
            "target": "HistoryBase"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "CompositionState"
        },
        {
            "source": "experiments/Vim/src/state/compositionState.ts",
            "type": "EXPORT",
            "target": "CompositionState"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "EasyMotion"
        },
        {
            "source": "IEasyMotion",
            "type": "IMPLEMENTS",
            "target": "EasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "EXPORT",
            "target": "EasyMotion"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "InsertTextTransformation"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Transformer"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "IMPORT",
            "target": "Transformer"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "EXPORT",
            "target": "Transformer"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "EXPORT",
            "target": "IQuitCommandArguments"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionMoveOptionsBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionMoveOptionsBase"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/common/motion/cursor.ts",
            "type": "EXPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "PairMatcher"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "PairMatcher"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "EXPORT",
            "target": "PairMatcher"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/notation.ts",
            "type": "EXPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "PluginDefaultMappings"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "EXPORT",
            "target": "PluginDefaultMappings"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "SneakForward"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "SneakForward"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "EXPORT",
            "target": "SneakForward"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textobject/paragraph.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "EXPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "TerminalCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "TerminalCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "EXPORT",
            "target": "TerminalCommand"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "SubstituteState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "SubstituteState"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "EXPORT",
            "target": "SubstituteState"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "EXPORT",
            "target": "VimrcImpl"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "UndoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "UndoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "EXPORT",
            "target": "UndoCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RegisterCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "RegisterCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RegisterCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "EXPORT",
            "target": "RegisterCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "TagMatcher"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "EXPORT",
            "target": "TagMatcher"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEditorScroll"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "RemapState"
        },
        {
            "source": "experiments/Vim/src/state/remapState.ts",
            "type": "EXPORT",
            "target": "RemapState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "GotoLineCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "GotoLineCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "EXPORT",
            "target": "GotoLineCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "PrintCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "PrintCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "EXPORT",
            "target": "PrintCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RedoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RedoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "EXPORT",
            "target": "RedoCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandQuit"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "CopyCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "CopyCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "EXPORT",
            "target": "CopyCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "LeftCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "LeftCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "EXPORT",
            "target": "LeftCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "MoveCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "MoveCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "EXPORT",
            "target": "MoveCommand"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "IMPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "EXPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "EXPORT",
            "target": "IDeleteCommandArguments"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "CamelCaseBaseMovement"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "EXPORT",
            "target": "IDigraphsCommandArguments"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "EXPORT",
            "target": "ISortCommandArguments"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "EXPORT",
            "target": "YankCommandArguments"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SmileCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SmileCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "EXPORT",
            "target": "SmileCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "EXPORT",
            "target": "IWriteQuitAllCommandArguments"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "NeovimValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "EXPORT",
            "target": "NeovimValidator"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "EXPORT",
            "target": "IRetabCommandArguments"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts",
            "type": "EXPORT",
            "target": "SearchFlags"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionNCharSearchCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "NohlCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "NohlCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "EXPORT",
            "target": "NohlCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "EXPORT",
            "target": "IWriteQuitCommandArguments"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "InputMethodSwitcherConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "EXPORT",
            "target": "InputMethodSwitcherConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ReadCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ReadCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "EXPORT",
            "target": "ReadCommand"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "VimrcValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "EXPORT",
            "target": "VimrcValidator"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "ReplaceState"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "IMPORT",
            "target": "ReplaceState"
        },
        {
            "source": "experiments/Vim/src/state/replaceState.ts",
            "type": "EXPORT",
            "target": "ReplaceState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "EXPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "RemappingValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "EXPORT",
            "target": "RemappingValidator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasymotionTrigger"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "EXPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IModeSpecificStrings"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IModeSpecificStrings"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "EXPORT",
            "target": "IPutCommandArguments"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ShiftCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ShiftCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "EXPORT",
            "target": "ShiftCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "CloseCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "CloseCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "EXPORT",
            "target": "CloseCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "BaseAction",
            "type": "EXTENDS",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "BaseOperator"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ReplaceOperator"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "VsCodeCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "VsCodeCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "EXPORT",
            "target": "VsCodeCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "IModeHandler"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "EXPORT",
            "target": "IModeHandler"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandLineAction"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "OnlyCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "OnlyCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "OnlyCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "EXPORT",
            "target": "OnlyCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEscInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandEscInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandEscInsertMode"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "SurroundState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "EXPORT",
            "target": "SurroundState"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/globals.ts",
            "type": "EXPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "EXPORT",
            "target": "NeovimWrapper"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WriteCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WriteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "WriteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "EXPORT",
            "target": "WriteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "EXPORT",
            "target": "IBangCommandArguments"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "CommandLine"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "EXPORT",
            "target": "CommandLine"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "SmartQuotes"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "TabCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "TabCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "TabCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "EXPORT",
            "target": "TabCommand"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "IMPORT",
            "target": "ReplaceString"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "ReplaceString"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "ExpandingSelection"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "ExpandingSelection"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "ExpandingSelection"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "ReplaceTextTransformation"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "EXPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionCharMoveOpions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionCharMoveOpions"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "YankCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "YankCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "EXPORT",
            "target": "YankCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "SmartQuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts",
            "type": "EXPORT",
            "target": "SmartQuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "DeleteCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DeleteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "EXPORT",
            "target": "DeleteCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WriteQuitCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WriteQuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "WriteQuitCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "EXPORT",
            "target": "WriteQuitCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "PutExCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "PutExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "EXPORT",
            "target": "PutExCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "IRegisterContent"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "EXPORT",
            "target": "IRegisterContent"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WriteQuitAllCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WriteQuitAllCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "EXPORT",
            "target": "WriteQuitAllCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SortCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SortCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "EXPORT",
            "target": "SortCommand"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "SurroundOperator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "EXPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "BufferDeleteCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "BufferDeleteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "EXPORT",
            "target": "BufferDeleteCommand"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "JumpTracker"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "EXPORT",
            "target": "JumpTracker"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "EXPORT",
            "target": "IHistoryCommandArguments"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/state/remapState.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "BangCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "BangCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "EXPORT",
            "target": "BangCommand"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "InsertTextVSCodeTransformation"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "InsertTextVSCodeTransformation"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "EXPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "EXPORT",
            "target": "IMovement"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "BasePutCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionWordMoveOpions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionWordMoveOpions"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "FileCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "EXPORT",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RetabCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RetabCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "EXPORT",
            "target": "RetabCommand"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "IMPORT",
            "target": "IVimrcKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts",
            "type": "IMPORT",
            "target": "IVimrcKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IVimrcKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "EXPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "DigraphsCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DigraphsCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "EXPORT",
            "target": "DigraphsCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextSingleQuotes"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "UnimplementedCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "HistoryCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "HistoryCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "EXPORT",
            "target": "HistoryCommand"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "DeleteTextRangeTransformation"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "NextHandlerClass"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/expression.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/util/externalCommand.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/error.ts",
            "type": "EXPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "Marker"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "IMPORT",
            "target": "Marker"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "Marker"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "PythonDocument"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "EXPORT",
            "target": "PythonDocument"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "EXPORT",
            "target": "Pattern"
        },
        {
            "source": "IModeHandler",
            "type": "IMPLEMENTS",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandlerMap.ts",
            "type": "IMPORT",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "EXPORT",
            "target": "ModeHandler"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharSearchCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "BaseEasyMotionCommand"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IAutoSwitchInputMethod"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IAutoSwitchInputMethod"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "EXPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "MoveCursorTransformation"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "Match"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "Match"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "Match"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "AddBreakpointCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Remappers"
        },
        {
            "source": "IRemapper",
            "type": "IMPLEMENTS",
            "target": "Remappers"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "EXPORT",
            "target": "Remappers"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IHighlightedYankConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IHighlightedYankConfiguration"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "Dot"
        },
        {
            "source": "SurroundOperator",
            "type": "EXTENDS",
            "target": "YankSurroundOperator"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "EXPORT",
            "target": "BaseMovement"
        },
        {
            "source": "BaseAction",
            "type": "EXTENDS",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "ICamelCaseMotionConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "ICamelCaseMotionConfiguration"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOnly"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "VSCodeCommandTransformation"
        },
        {
            "source": "IConfiguration",
            "type": "IMPLEMENTS",
            "target": "Configuration"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharFindForwardCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveByScreenLine"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "ISmartQuotesConfiguration"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "Macro"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "EXPORT",
            "target": "InputMethodSwitcher"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "ITargetsConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "ITargetsConfiguration"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "CamelCaseTextObjectMovement"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "ContentChangeTransformation"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/decoration.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/globals.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IConfiguration"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectWord"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "SelectWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectWord"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharFindBackwardCommand"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineTab"
        },
        {
            "source": "HistoryFile",
            "type": "EXTENDS",
            "target": "SearchHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "SearchHistory"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "EXPORT",
            "target": "SearchHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "EXPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "MarksCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "MarksCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "EXPORT",
            "target": "MarksCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "JumpsCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "JumpsCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "EXPORT",
            "target": "JumpsCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ReplaceModeToInsertMode"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "EXPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "IRemapper",
            "type": "IMPLEMENTS",
            "target": "Remapper"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "EXPORT",
            "target": "Remapper"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandToggleFold"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharTilCharacterForwardCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToRightPane"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "ForceStopRemappingError"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "ForceStopRemappingError"
        },
        {
            "source": "experiments/Vim/src/error.ts",
            "type": "EXPORT",
            "target": "ForceStopRemappingError"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "SearchOptions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "SearchOptions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "SearchOptions"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SetCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "SetCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SetCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "EXPORT",
            "target": "SetCommand"
        },
        {
            "source": "HistoryFile",
            "type": "EXTENDS",
            "target": "CommandLineHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "CommandLineHistory"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "EXPORT",
            "target": "CommandLineHistory"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "NoOpCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "EXPORT",
            "target": "NoOpCommand"
        },
        {
            "source": "CommandEditorScroll",
            "type": "EXTENDS",
            "target": "CommandCtrlE"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "EXPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/jumps/jump.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionSearchAction"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "EasyMotionSearchAction"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionSearchAction"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RightCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RightCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "EXPORT",
            "target": "RightCommand"
        },
        {
            "source": "CamelCaseBaseMovement",
            "type": "EXTENDS",
            "target": "MoveCamelCaseWordBegin"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandCloseFold"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharTilCharacterBidirectionalCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DeleteBreakpointCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertPreviousText"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandInsertPreviousText"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandInsertPreviousText"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastSingleQuotes"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectABigWord"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "SelectABigWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectABigWord"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "BackspaceInReplaceMode"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "ISubstituteCommandArguments"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharTilBackwardCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "SneakBackward"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "SneakBackward"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "EXPORT",
            "target": "SneakBackward"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ClearJumpsCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ClearJumpsCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "EXPORT",
            "target": "ClearJumpsCommand"
        },
        {
            "source": "CommandEditorScroll",
            "type": "EXTENDS",
            "target": "CommandCtrlY"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "SubstituteFlags"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandCloseAllFolds"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordExactForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToLowerPane"
        },
        {
            "source": "CamelCaseBaseMovement",
            "type": "EXTENDS",
            "target": "MoveCamelCaseWordEnd"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionSearchCommand"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandOpenFold"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "DeleteMarksCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DeleteMarksCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "EXPORT",
            "target": "DeleteMarksCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "IEasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "IEasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "IEasyMotion"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionFindForwardCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandScrollAndMoveCursor"
        },
        {
            "source": "SurroundOperator",
            "type": "EXTENDS",
            "target": "CommandSurroundModeStartVisual"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandOpenAllFolds"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "IMark"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "EXPORT",
            "target": "IMark"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertPreviousTextAndQuit"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionFindBackwardCommand"
        },
        {
            "source": "ExpandingSelection",
            "type": "EXTENDS",
            "target": "SelectAnExpandingBlock"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectAnExpandingBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToUpperPane"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextDoubleQuotes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ReplaceInReplaceMode"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandCloseAllFoldsRecursively"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordForward"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveUpByScreenLine"
        },
        {
            "source": "CamelCaseBaseMovement",
            "type": "EXTENDS",
            "target": "MoveBeginningCamelCaseWord"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTilCharacterForwardCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "CenterCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "CenterCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "EXPORT",
            "target": "CenterCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SubstituteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "SubstituteCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SubstituteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "SubstituteCommand"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "DeleteOperator"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "DeleteOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "DeleteOperator"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "EXPORT",
            "target": "BaseCommand"
        },
        {
            "source": "BaseAction",
            "type": "EXTENDS",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IndentCommand"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandOpenAllFoldsRecursively"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastDoubleQuotes"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTilCharacterBidirectionalCommand"
        },
        {
            "source": "SurroundOperator",
            "type": "EXTENDS",
            "target": "CommandSurroundModeStartVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToLeftPane"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveDownByScreenLine"
        },
        {
            "source": "CamelCaseTextObjectMovement",
            "type": "EXTENDS",
            "target": "SelectInnerCamelCaseWord"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "EXPORT",
            "target": "LineRange"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTilBackwardCommand"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "AddFold"
        },
        {
            "source": "EasyMotionSearchAction",
            "type": "IMPLEMENTS",
            "target": "SearchByCharCommand"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "SearchByCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "SearchByCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "SearchByCharCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastDoubleQuotes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordExactBackward"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfWordForwardsCommand"
        },
        {
            "source": "CommandLine",
            "type": "EXTENDS",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "EXPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CreateUndoPoint"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveFullPageUp"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveByScreenLineMaintainDesiredColumn"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ListBreakpointsCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurround"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CycleThroughPanes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DisableExtension"
        },
        {
            "source": "IndentCommand",
            "type": "EXTENDS",
            "target": "IncreaseIndent"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "DeleteOperatorVisual"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfWordBidirectionalCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextBacktick"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionLineForward"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveFullPageDown"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "RemoveFold"
        },
        {
            "source": "IndentCommand",
            "type": "EXTENDS",
            "target": "DecreaseIndent"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "ExCommandLineEnter"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerWord"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "SelectInnerWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerWord"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionLineBackward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EnableExtension"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordBackward"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextBacktick"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandBackspaceInInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandBackspaceInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandBackspaceInInsertMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "VerticalSplit"
        },
        {
            "source": "CommandSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundDeleteSurround"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "YankOperator"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "YankOperator"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "YankOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "YankOperator"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveHalfPageDown"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionJumpToAnywhereCommand"
        },
        {
            "source": "MoveByScreenLineMaintainDesiredColumn",
            "type": "EXTENDS",
            "target": "MoveDownFoldFix"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "SearchCommandLineEnter"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastBacktick"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionEndOfWordForwardsCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "Breakpoints"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "EXPORT",
            "target": "Breakpoints"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNumber"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandNumber"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandNumber"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveHalfPageUp"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "OrthogonalSplit"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandDeleteInInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "EasyMotionSearchAction",
            "type": "IMPLEMENTS",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionEndOfWordBidirectionalCommand"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerBigWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerBigWord"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchForwards"
        },
        {
            "source": "CommandSurroundDeleteSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundDeleteSurroundCnt"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastBacktick"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionBeginningWordCommand"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "EXPORT",
            "target": "ViewChange"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineEscape"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCenterScroll"
        },
        {
            "source": "CommandSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundChangeSurround"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EvenPaneWidths"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionEndBackwardCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "BasePythonMovement"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertInInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandInsertInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandInsertInInsertMode"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundQuote"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "FilterOperator"
        },
        {
            "source": "EasyMotionLineMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfLineForwardsCommand"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineCtrlF"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectSentence"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectSentence"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDown"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchBackwards"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "IMPORT",
            "target": "SearchOffset"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "EXPORT",
            "target": "SearchOffset"
        },
        {
            "source": "EasyMotionLineMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfLineBackwordsCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IncreasePaneWidth"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideQuote"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineBackspace"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCenterScrollFirstChar"
        },
        {
            "source": "CommandSurroundChangeSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundChangeSurroundCnt"
        },
        {
            "source": "EasyMotionLineMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfLineBidirectionalCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EasyMotionCharMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "EasyMotionCharMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasyMotionCharMoveCommandBase"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertDigraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurroundAddSurrounding"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ShiftYankOperatorVisual"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonNextFunctionStart"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextQuote"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DecreasePaneWidth"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineDelete"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRegister"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandRegister"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerSentence"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerSentence"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SearchObject"
        },
        {
            "source": "CommandLine",
            "type": "EXTENDS",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "EXPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveUp"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "InsertModeRemapper"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonPrevFunctionStart"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "NormalModeRemapper"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "EasyMotionWordMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "EasyMotionWordMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasyMotionWordMoveCommandBase"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextQuote"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IncreasePaneHeight"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTopScroll"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandlineHome"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "DeleteOperatorXVisual"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "OperatorPendingModeRemapper"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "VisualModeRemapper"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonNextFunctionEnd"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "CommandLineModeRemapper"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRecordMacro"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "HistoryTracker"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "EXPORT",
            "target": "HistoryTracker"
        },
        {
            "source": "MoveByScreenLineMaintainDesiredColumn",
            "type": "EXTENDS",
            "target": "MoveUpFoldFix"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectParagraph"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectParagraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurroundAddSurroundingTag"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "EXPORT",
            "target": "CommandSurroundAddSurroundingTag"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DecreasePaneHeight"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastQuote"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ChangeOperatorSVisual"
        },
        {
            "source": "SearchObject",
            "type": "EXTENDS",
            "target": "SearchObjectForward"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonPrevFunctionEnd"
        },
        {
            "source": "BasePutCommand",
            "type": "EXTENDS",
            "target": "PutCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTopScrollFirstChar"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineDeleteWord"
        },
        {
            "source": "SearchObject",
            "type": "EXTENDS",
            "target": "SearchObjectBackward"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastQuote"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerParagraph"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerParagraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandQuitRecordMacro"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandQuitRecordMacro"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandQuitRecordMacro"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "EasyMotionLineMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "EasyMotionLineMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasyMotionLineMoveCommandBase"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineDeleteToBeginning"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "ArrowsInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "ArrowsInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "ArrowsInInsertMode"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "FormatOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertRegisterContent"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurroundAddSurroundingFunction"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "EXPORT",
            "target": "CommandSurroundAddSurroundingFunction"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandBottomScroll"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineWordLeft"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectEntire"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectEntire"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "ArrowsInReplaceMode"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineWordRight"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectEntireIgnoringLeadingTrailing"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectEntireIgnoringLeadingTrailing"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ChangeCaseOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExecuteLastMacro"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOneNormalCommandInInsertMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandBottomScrollFirstChar"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineHistoryBack"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EasyMotionCharInputMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "CommandNextSearchMatch"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCtrlW"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "IndentObjectMatch"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineHistoryForward"
        },
        {
            "source": "PutCommand",
            "type": "EXTENDS",
            "target": "PutBeforeCommand"
        },
        {
            "source": "ChangeCaseOperator",
            "type": "EXTENDS",
            "target": "UpperCaseOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEscEasyMotionCharInputMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExecuteMacro"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandInsertRegisterContentInCommandLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "InsertCharAbove"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "InsertCharAbove"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "InsertCharAbove"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "CommandPreviousSearchMatch"
        },
        {
            "source": "UpperCaseOperator",
            "type": "EXTENDS",
            "target": "UpperCaseWithMotion"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveEasyMotion"
        },
        {
            "source": "ChangeCaseOperator",
            "type": "EXTENDS",
            "target": "LowerCaseOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "InsertCharBelow"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "InsertCharBelow"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "InsertCharBelow"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEsc"
        },
        {
            "source": "LowerCaseOperator",
            "type": "EXTENDS",
            "target": "LowerCaseWithMotion"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandInsertWord"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MarkMovementBOL"
        },
        {
            "source": "ChangeCaseOperator",
            "type": "EXTENDS",
            "target": "ToggleCaseOperator"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineLeftRight"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCtrlUInInsertMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "ToggleCaseOperator",
            "type": "EXTENDS",
            "target": "ToggleCaseWithMotion"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MarkMovement"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "IndentOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateAutocompleteDown"
        },
        {
            "source": "IndentObjectMatch",
            "type": "EXTENDS",
            "target": "InsideIndentObject"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLinePaste"
        },
        {
            "source": "IndentObjectMatch",
            "type": "EXTENDS",
            "target": "InsideIndentObjectAbove"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "NextMark"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "IndentOperatorVisualAndVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateAutocompleteUp"
        },
        {
            "source": "IndentObjectMatch",
            "type": "EXTENDS",
            "target": "InsideIndentObjectBoth"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandCtrlLInSearchMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOverrideCopy"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectArgument"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCtrlVInInsertMode"
        },
        {
            "source": "PutCommand",
            "type": "EXTENDS",
            "target": "GPutCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "PrevMark"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "IndentOperatorVisualBlock"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandAdvanceCurrentMatch"
        },
        {
            "source": "PutBeforeCommand",
            "type": "EXTENDS",
            "target": "GPutBeforeCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowLineAutocomplete"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineType"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "OutdentOperator"
        },
        {
            "source": "PutCommand",
            "type": "EXTENDS",
            "target": "PutWithIndentCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "NextMarkLinewise"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCmdA"
        },
        {
            "source": "PutBeforeCommand",
            "type": "EXTENDS",
            "target": "PutBeforeWithIndentCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "NewLineInsertMode"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "OutdentOperatorVisualAndVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MarkCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandReplaceAtCursorFromInsertMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "PrevMarkLinewise"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowCommandLine"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "OutdentOperatorVisualBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CreateUndoPoint"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowCommandHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "CommandShowCommandHistory"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandShowCommandHistory"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLeft"
        },
        {
            "source": "SelectArgument",
            "type": "EXTENDS",
            "target": "SelectInnerArgument"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerArgument"
        },
        {
            "source": "SelectArgument",
            "type": "EXTENDS",
            "target": "SelectAroundArgument"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectAroundArgument"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowSearchHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "CommandShowSearchHistory"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandShowSearchHistory"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveRight"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "YankVisualBlockMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDownNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandDot"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveUpNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRepeatSubstitution"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDownUnderscore"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "CommentOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoToOtherEndOfHighlightedText"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveToColumn"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ROT13Operator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "ROT13Operator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoToOtherSideOfHighlightedText"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandUndo"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "IMPORT",
            "target": "CommandUndo"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandUndo"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFindForward"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "CommentBlockOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandUndoOnLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFindBackward"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ActionVisualReflowParagraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRedo"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "IMPORT",
            "target": "CommandRedo"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandRedo"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandDeleteToLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveTilForward"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveTilBackward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandYankFullLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandYankFullLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveRepeat"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandChangeToLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveRepeatReversed"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandClearLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLineBegin"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExitVisualMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandVisualMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineBegin"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenNonBlank"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandReselectVisual"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineEndNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandVisualBlockMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineCenter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExitVisualBlockMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveUpByDisplayLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandVisualLineMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveDownByDisplayLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExitVisualLineMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveUpByScreenLineVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOpenFile"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveDownByScreenLineVisualLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveUpByScreenLineVisualBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "GoToDeclaration"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDownByScreenLineVisualBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "GoToDefinition"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToRight"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOpenLink"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoBackInChangelist"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToLeft"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoForwardInChangelist"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToRightHalf"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtLastChange"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtLastChange"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtLastChange"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToLeftHalf"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtFirstCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtFirstCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtFirstCharacter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtLineBegin"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtLineBegin"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtLineBegin"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveToLineFromViewPortTop"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAfterCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAfterCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAfterCursor"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveToLineFromViewPortBottom"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveToMiddleLineInViewPort"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtLineEnd"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtLineEnd"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertNewLineAbove"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertNewLineAbove"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertNewLineAbove"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNonBlankFirst"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNonBlankLast"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertNewLineBefore"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertNewLineBefore"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertNewLineBefore"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "EndOfSpecificLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateBack"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveWordBegin"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTabNext"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFullWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveFullWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveFullWordBegin"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTabPrevious"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveWordEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteChar"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteChar"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFullWordEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteCharWithDeleteKey"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteCharWithDeleteKey"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLastWordEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLastFullWordEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteLastChar"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteLastChar"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveBeginningWord"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveBeginningFullWord"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MovePreviousSentenceBegin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "GoToOffset"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNextSentenceBegin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveParagraphEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinVisualMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveParagraphBegin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveSectionBoundary"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinVisualBlockMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinNoWhitespace"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MoveNextSectionBegin"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MoveNextSectionEnd"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MovePreviousSectionBegin"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MovePreviousSectionEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinNoWhitespaceVisualMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveToMatchingBracket"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionReplaceCharacter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionReplaceCharacterVisual"
        },
        {
            "source": "ExpandingSelection",
            "type": "EXTENDS",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionReplaceCharacterVisualBlock"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveInsideParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideParentheses"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteVisualBlock"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveCurlyBrace"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionShiftDVisualBlock"
        },
        {
            "source": "MoveCurlyBrace",
            "type": "EXTENDS",
            "target": "MoveInsideCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideCurlyBrace"
        },
        {
            "source": "MoveCurlyBrace",
            "type": "EXTENDS",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveInsideCaret"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideCaret"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideCaret"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualBlockMode"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveAroundCaret"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundCaret"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundCaret"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundCaret"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveInsideSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideSquareBracket"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeInVisualBlockMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "IMPORT",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeToEOLInVisualBlockMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualLineModeCommand"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveInsideSingleQuotes"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualLineMode"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveInsideDoubleQuotes"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualLineModeAppend"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualMode"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveInsideBacktick"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualModeAppend"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedRoundBracketBackward"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedRoundBracketForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualBlockModeAppend"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedCurlyBracketBackward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteCharVisualLineMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteCharVisualLineMode"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedCurlyBracketForward"
        },
        {
            "source": "ExpandingSelection",
            "type": "EXTENDS",
            "target": "MoveTagMatch"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteLineVisualMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeLineVisualModeS"
        },
        {
            "source": "MoveTagMatch",
            "type": "EXTENDS",
            "target": "MoveInsideTag"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveInsideTag"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideTag"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeLineVisualMode"
        },
        {
            "source": "MoveTagMatch",
            "type": "EXTENDS",
            "target": "MoveAroundTag"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundTag"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundTag"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundTag"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeLineVisualBlockMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeChar"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ToggleCaseAndMoveForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IncrementDecrementNumberAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "IncrementNumberAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "DecrementNumberAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "IncrementNumberStaircaseAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "DecrementNumberStaircaseAction"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandUnicodeName"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "IMPORT",
            "target": "CommandUnicodeName"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandUnicodeName"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionTriggerHover"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdD"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "ActionOverrideCmdD"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionOverrideCmdD"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdDInsert"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdAltDown"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdAltUp"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionShowFileInfo"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "WriteQuit"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "Quit"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToAlternateFile"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ShowFileOutline"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/.github"
        },
        {
            "source": "experiments/Vim/.github",
            "type": "CHILD",
            "target": "experiments/Vim/.github/ISSUE_TEMPLATE"
        },
        {
            "source": "experiments/Vim/.github",
            "type": "CHILD",
            "target": "experiments/Vim/.github/workflows"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/.husky"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/.vscode"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/build"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/extension.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/extensionBase.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/extensionBase.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/extensionBase.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/extensionWeb.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/images"
        },
        {
            "source": "experiments/Vim/images",
            "type": "CHILD",
            "target": "experiments/Vim/images/design"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/src"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/fold.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/fold.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/replace.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/replace.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/scroll.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/scroll.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/search.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/search.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/window.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/window.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/include-plugins.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/include-plugins.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/languages"
        },
        {
            "source": "experiments/Vim/src/actions/languages",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/languages/python"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/languages/python/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/languages/python/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        },
        {
            "trgt_range": "1: :73",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :105",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "trgt_range": "1: :16",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :22",
            "target": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "trgt_range": "1: :14",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :61",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :48",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :44",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :80",
            "target": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "trgt_range": "1: :14",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :17",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "trgt_range": "1: :14",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :17",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :31",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "trgt_range": "1: :48",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :44",
            "target": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :80",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :105",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :80",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :82",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :62",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :67",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "trgt_range": "1: :111",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/platform/node/fs.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :130",
            "target": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "trgt_range": null,
            "percentage": null,
            "clone": null,
            "source": "experiments/Vim/src/platform/node/fs.ts",
            "type": "CORE_CONTENT",
            "src_range": null,
            "target": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        }
    ],
    "nodes": [
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 7,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandFold"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "Clipboard"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 5,
            "name": "ModeHandlerMapImpl"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MarkerGenerator"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 5,
            "name": "HistoryBase"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "AsciiCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ConfigurationValidator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "DecorationImpl"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "TaskQueue"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "VimrcKeyRemappingBuilderImpl"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "Logger"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "GotoCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "QuoteMatcher"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "WallCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "HistoryFile"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "Jump"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "NumericString"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "FileInfoCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ShCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "VSCodeContext"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ExitReplaceMode"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 5,
            "name": "HistoryBase"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CompositionState"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 7,
            "name": "EasyMotion"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "InsertTextTransformation"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "Transformer"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IQuitCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "EasyMotionMoveOptionsBase"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "Cursor"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "PairMatcher"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "Notation"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "GlobalState"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IErrorMessage"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "PluginDefaultMappings"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "SneakForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 15,
            "name": "TextEditor"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "TerminalCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SubstituteState"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 5,
            "name": "VimrcImpl"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ExternalCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "UndoCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "RegisterCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "TagMatcher"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandEditorScroll"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "RemapState"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "GotoLineCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "PrintCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "RedoCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "LineInfo"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandQuit"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "CopyCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "LeftCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "MoveCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "BaseAction"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MarkQuickPickItem"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IDeleteCommandArguments"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CamelCaseBaseMovement"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IDigraphsCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ISortCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "YankCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IBufferDeleteCommandArguments"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SmileCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IWriteQuitAllCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IValidatorResult"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "JumpPickItem"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "NeovimValidator"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IRetabCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "SearchFlags"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionNCharSearchCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "NohlCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Path"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IWriteQuitCommandArguments"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "InputMethodSwitcherConfigurationValidator"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ReadCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "VimrcValidator"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ReplaceState"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Expression"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 49,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ExCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "RemappingValidator"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "EasymotionTrigger"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 7,
            "name": "PositionDiff"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextParentheses"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IModeSpecificStrings"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IPutCommandArguments"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ShiftCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CloseCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 24,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "BaseOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ReplaceOperator"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "VsCodeCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 2,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IRemapper"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 14,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "TextObject"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 1,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IModeHandler"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 22,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "CommandLineAction"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IInputMethodSwitcher"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "OnlyCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandEscInsertMode"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "SurroundState"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "Globals"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "NeovimWrapper"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "WriteCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IBangCommandArguments"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 18,
            "name": "CommandLine"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "StatusBarImpl"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 18,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SmartQuotes"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "TabCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ReplaceString"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "DocumentContentChangeAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ExpandingSelection"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IModeHandlerMap"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ReplaceTextTransformation"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "QuitCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "EasyMotionCharMoveOpions"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "YankCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SmartQuoteMatcher"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "DeleteCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "WriteQuitCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "StructureElement"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "DigraphQuickPickItem"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "PutExCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IRegisterContent"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "WriteQuitAllCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "SortCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SurroundOperator"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "UpdatedLineSegment"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ValidatorResults"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "BufferDeleteCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 9,
            "name": "JumpTracker"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "DocumentChange"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IHistoryCommandArguments"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IKeyRemapping"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "BangCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "InsertTextVSCodeTransformation"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "RecordedState"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IMovement"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 7,
            "name": "BasePutCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "EasyMotionWordMoveOpions"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "FileCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "VSCodeKeybinding"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastParentheses"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "RetabCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IVimrcKeyRemapping"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 12,
            "name": "Register"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DigraphsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextSingleQuotes"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "UnimplementedCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "HistoryCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "DeleteTextRangeTransformation"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "NextHandlerClass"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "VimError"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Marker"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IHandleKeys"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 7,
            "name": "PythonDocument"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "Pattern"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 10,
            "name": "ModeHandler"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTwoCharSearchCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ICodeKeybinding"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 5,
            "name": "BaseEasyMotionCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IAutoSwitchInputMethod"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "SearchState"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "MoveCursorTransformation"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IBaseMovement"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "Match"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "AddBreakpointCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextParentheses"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "Remappers"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IHighlightedYankConfiguration"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Dot"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "YankSurroundOperator"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IKeyBinding"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 56,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "BaseMovement"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ICamelCaseMotionConfiguration"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandOnly"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "VSCodeCommandTransformation"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "Configuration"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTwoCharFindForwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 19,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "MoveByScreenLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastParentheses"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ISmartQuotesConfiguration"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Macro"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "InputMethodSwitcher"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextSingleQuotes"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ITargetsConfiguration"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CamelCaseTextObjectMovement"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ContentChangeTransformation"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextCurlyBrace"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 1,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IConfiguration"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "INVim"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectWord"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTwoCharFindBackwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineTab"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SearchHistory"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastCurlyBrace"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "Address"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MarksCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "JumpsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ReplaceModeToInsertMode"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 4,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IConfigurationValidator"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 5,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "Remapper"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandToggleFold"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTwoCharTilCharacterForwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToRightPane"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastSingleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextCurlyBrace"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ForceStopRemappingError"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "SearchOptions"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SetCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandLineHistory"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "NoOpCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandCtrlE"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "VimState"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "STRATEGY",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 2,
            "methodVPs": null,
            "publicMethods": null,
            "name": "EasyMotionSearchAction"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "RightCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastCurlyBrace"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveCamelCaseWordBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandCloseFold"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTwoCharTilCharacterBidirectionalCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextSquareBracket"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DeleteBreakpointCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandInsertPreviousText"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastSingleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectABigWord"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "BackspaceInReplaceMode"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ISubstituteCommandArguments"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTwoCharTilBackwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "SneakBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastSquareBracket"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ClearJumpsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandCtrlY"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "SubstituteFlags"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandCloseAllFolds"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSearchCurrentWordExactForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToLowerPane"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveCamelCaseWordEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextSquareBracket"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionSearchCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandOpenFold"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DeleteMarksCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastSquareBracket"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextDoubleQuotes"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 1,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IEasyMotion"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionFindForwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandScrollAndMoveCursor"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextCaret"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSurroundModeStartVisual"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandOpenAllFolds"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IMark"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertPreviousTextAndQuit"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionFindBackwardCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "PathDetails"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectAnExpandingBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToUpperPane"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastCaret"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "HistoryStep"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextDoubleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ReplaceInReplaceMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandCloseAllFoldsRecursively"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSearchCurrentWordForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveUpByScreenLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextCaret"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveBeginningCamelCaseWord"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTilCharacterForwardCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CenterCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "SubstituteCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DeleteOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 157,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "BaseCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Position"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastCaret"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IndentCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandOpenAllFoldsRecursively"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastDoubleQuotes"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTilCharacterBidirectionalCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSurroundModeStartVisualLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToLeftPane"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveDownByScreenLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectInnerCamelCaseWord"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "LineRange"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionTilBackwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "AddFold"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "SearchByCharCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastDoubleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSearchCurrentWordExactBackward"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionStartOfWordForwardsCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 8,
            "name": "ExCommandLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CreateUndoPoint"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandMoveFullPageUp"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveByScreenLineMaintainDesiredColumn"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ListBreakpointsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandSurround"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CycleThroughPanes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DisableExtension"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "IncreaseIndent"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DeleteOperatorVisual"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionStartOfWordBidirectionalCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextBacktick"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionLineForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandMoveFullPageDown"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "RemoveFold"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "DecreaseIndent"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ExCommandLineEnter"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectInnerWord"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionLineBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "EnableExtension"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSearchCurrentWordBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextBacktick"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandBackspaceInInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "VerticalSplit"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSurroundDeleteSurround"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "YankOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandMoveHalfPageDown"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionJumpToAnywhereCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveDownFoldFix"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "SearchCommandLineEnter"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 10,
            "name": "UndoStack"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastBacktick"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionEndOfWordForwardsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "Breakpoints"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "CommandNumber"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandMoveHalfPageUp"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "OrthogonalSplit"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandDeleteInInsertMode"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "SearchByNCharCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionEndOfWordBidirectionalCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectInnerBigWord"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandSearchForwards"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandSurroundDeleteSurroundCnt"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastBacktick"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionBeginningWordCommand"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "ViewChange"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineEscape"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandCenterScroll"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandSurroundChangeSurround"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "EvenPaneWidths"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionEndBackwardCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "BasePythonMovement"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandInsertInInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundQuote"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "FilterOperator"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionStartOfLineForwardsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineCtrlF"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectSentence"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveDown"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandSearchBackwards"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SearchOffset"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionStartOfLineBackwordsCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IncreasePaneWidth"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideQuote"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineBackspace"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandCenterScrollFirstChar"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandSurroundChangeSurroundCnt"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionStartOfLineBidirectionalCommand"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 13,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "EasyMotionCharMoveCommandBase"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "CommandInsertDigraph"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "CommandSurroundAddSurrounding"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ShiftYankOperatorVisual"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MovePythonNextFunctionStart"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundNextQuote"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DecreasePaneWidth"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineDelete"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandRegister"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectInnerSentence"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "SearchObject"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 13,
            "name": "SearchCommandLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveUp"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "InsertModeRemapper"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ChangeList"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MovePythonPrevFunctionStart"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NormalModeRemapper"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 9,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "EasyMotionWordMoveCommandBase"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideNextQuote"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IncreasePaneHeight"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandTopScroll"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandlineHome"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DeleteOperatorXVisual"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "OperatorPendingModeRemapper"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "VisualModeRemapper"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MovePythonNextFunctionEnd"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "CommandLineModeRemapper"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandRecordMacro"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 17,
            "name": "HistoryTracker"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveUpFoldFix"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectParagraph"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandSurroundAddSurroundingTag"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "DecreasePaneHeight"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundLastQuote"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ChangeOperatorSVisual"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SearchObjectForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MovePythonPrevFunctionEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 6,
            "name": "PutCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandTopScrollFirstChar"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineDeleteWord"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SearchObjectBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideLastQuote"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectInnerParagraph"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "CommandQuitRecordMacro"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "EasyMotionLineMoveCommandBase"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineDeleteToBeginning"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ArrowsInInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "FormatOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertRegisterContent"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandSurroundAddSurroundingFunction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandBottomScroll"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineWordLeft"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectEntire"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ArrowsInReplaceMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineWordRight"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectEntireIgnoringLeadingTrailing"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ChangeCaseOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandExecuteLastMacro"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandOneNormalCommandInInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandBottomScrollFirstChar"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineHistoryBack"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "EasyMotionCharInputMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandNextSearchMatch"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "SurroundHelper"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandCtrlW"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "IndentObjectMatch"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineHistoryForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "PutBeforeCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "UpperCaseOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandEscEasyMotionCharInputMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandExecuteMacro"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertRegisterContentInCommandLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "InsertCharAbove"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandPreviousSearchMatch"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "UpperCaseWithMotion"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveEasyMotion"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "LowerCaseOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "InsertCharBelow"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandEsc"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LowerCaseWithMotion"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertWord"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MarkMovementBOL"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ToggleCaseOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineLeftRight"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandCtrlUInInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandInsertAtCursor"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "ToggleCaseWithMotion"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MarkMovement"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CursorAfterText"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IndentOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandNavigateAutocompleteDown"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "InsideIndentObject"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLinePaste"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "InsideIndentObjectAbove"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "NextMark"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IndentOperatorVisualAndVisualLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandNavigateAutocompleteUp"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "InsideIndentObjectBoth"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandCtrlLInSearchMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandOverrideCopy"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "SelectArgument"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandCtrlVInInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "GPutCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "PrevMark"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IndentOperatorVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandAdvanceCurrentMatch"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "GPutBeforeCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandShowLineAutocomplete"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "AdjustedIndent"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandLineType"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "OutdentOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "PutWithIndentCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "NextMarkLinewise"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandCmdA"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "PutBeforeWithIndentCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "NewLineInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "OutdentOperatorVisualAndVisualLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MarkCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 4,
            "name": "Ex"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandReplaceAtCursorFromInsertMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "PrevMarkLinewise"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandShowCommandLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "OutdentOperatorVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CreateUndoPoint"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandShowCommandHistory"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveLeft"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SelectInnerArgument"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "SelectAroundArgument"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandShowSearchHistory"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveRight"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ChangeOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "YankVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveDownNonBlank"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandDot"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveUpNonBlank"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandRepeatSubstitution"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveDownUnderscore"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommentOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandGoToOtherEndOfHighlightedText"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToColumn"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ROT13Operator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandGoToOtherSideOfHighlightedText"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandUndo"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveFindForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommentBlockOperator"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandUndoOnLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveFindBackward"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "CommentTypeSingle"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "CommentTypeMultiLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ActionVisualReflowParagraph"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandRedo"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandDeleteToLineEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveTilForward"
        },
        {
            "publicConstructors": null,
            "types": [
                "PUBLIC",
                "INTERFACE",
                "VP"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 0,
            "methodVPs": null,
            "publicMethods": null,
            "name": "Chunk"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveTilBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandYankFullLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveRepeat"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandChangeToLineEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveRepeatReversed"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "CommandClearLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveLineEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "MoveLineBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandExitVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveScreenLineBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveScreenNonBlank"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveScreenLineEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandReselectVisual"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveScreenLineEndNonBlank"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveScreenLineCenter"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandExitVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveUpByDisplayLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandVisualLineMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveDownByDisplayLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandExitVisualLineMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveUpByScreenLineVisualLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandOpenFile"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveDownByScreenLineVisualLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveUpByScreenLineVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "GoToDeclaration"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveDownByScreenLineVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "GoToDefinition"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveScreenToRight"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandOpenLink"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandGoBackInChangelist"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveScreenToLeft"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandGoForwardInChangelist"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveScreenToRightHalf"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertAtLastChange"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveScreenToLeftHalf"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertAtFirstCharacter"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertAtLineBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveToLineFromViewPortTop"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandInsertAfterCursor"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveToLineFromViewPortBottom"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveToMiddleLineInViewPort"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandInsertAtLineEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveNonBlank"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandInsertNewLineAbove"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveNonBlankFirst"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveNonBlankLast"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandInsertNewLineBefore"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "EndOfSpecificLine"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandNavigateBack"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveWordBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandNavigateForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandTabNext"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveFullWordBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "CommandTabPrevious"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveWordEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionDeleteChar"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "MoveFullWordEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionDeleteCharWithDeleteKey"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveLastWordEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveLastFullWordEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionDeleteLastChar"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveBeginningWord"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionJoin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveBeginningFullWord"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MovePreviousSentenceBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "GoToOffset"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveNextSentenceBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveParagraphEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionJoinVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveParagraphBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveSectionBoundary"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionJoinVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionJoinNoWhitespace"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveNextSectionBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveNextSectionEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MovePreviousSectionBegin"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MovePreviousSectionEnd"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionJoinNoWhitespaceVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "MoveToMatchingBracket"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionReplaceCharacter"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionReplaceCharacterVisual"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 7,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveInsideCharacter"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionReplaceCharacterVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideParentheses"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionDeleteVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundParentheses"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveCurlyBrace"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionShiftDVisualBlock"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideCurlyBrace"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundCurlyBrace"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideCaret"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionGoToInsertVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundCaret"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideSquareBracket"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundSquareBracket"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionChangeInVisualBlockMode"
        },
        {
            "publicConstructors": 1,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 7,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "MoveQuoteMatch"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionChangeToEOLInVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ActionGoToInsertVisualLineModeCommand"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideSingleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionGoToInsertVisualLineMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundSingleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideDoubleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionGoToInsertVisualLineModeAppend"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundDoubleQuotes"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionGoToInsertVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideBacktick"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundBacktick"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionGoToInsertVisualModeAppend"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToUnclosedRoundBracketBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToUnclosedRoundBracketForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionGoToInsertVisualBlockModeAppend"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToUnclosedCurlyBracketBackward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionDeleteCharVisualLineMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveToUnclosedCurlyBracketForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "MoveTagMatch"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionDeleteLineVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionChangeLineVisualModeS"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveInsideTag"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionChangeLineVisualMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "MoveAroundTag"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ActionChangeLineVisualBlockMode"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 3,
            "name": "ActionChangeChar"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "ToggleCaseAndMoveForward"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "ABSTRACT",
                "VP",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 4,
            "methodVPs": 0,
            "publicMethods": 1,
            "name": "IncrementDecrementNumberAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "IncrementNumberAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "DecrementNumberAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "IncrementNumberStaircaseAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "DecrementNumberStaircaseAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "CommandUnicodeName"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionTriggerHover"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionOverrideCmdD"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionOverrideCmdDInsert"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionOverrideCmdAltDown"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionOverrideCmdAltUp"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionShowFileInfo"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "WriteQuit"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "Quit"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ActionGoToAlternateFile"
        },
        {
            "publicConstructors": 0,
            "types": [
                "PUBLIC",
                "CLASS",
                "VARIANT"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 2,
            "name": "ShowFileOutline"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 2,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "Error"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveInsideParentheses)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveInsideParentheses)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveAroundParentheses)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveAroundParentheses)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveInsideCurlyBrace)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveInsideCurlyBrace)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveAroundCurlyBrace)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "EasyMotionMoveOptionsBase"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveAroundCurlyBrace)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveInsideSquareBracket)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveInsideSquareBracket)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveAroundSquareBracket)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveAroundSquareBracket)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveInsideCaret)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveInsideCaret)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "NextObject(MoveAroundCaret)"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 1,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "LastObject(MoveAroundCaret)"
        },
        {
            "publicConstructors": null,
            "types": [
                "INTERFACE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 4,
            "methodVPs": null,
            "publicMethods": null,
            "name": "vscode.Disposable"
        },
        {
            "publicConstructors": null,
            "types": [
                "INTERFACE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 2,
            "methodVPs": null,
            "publicMethods": null,
            "name": "QuickPickItem"
        },
        {
            "publicConstructors": null,
            "types": [
                "INTERFACE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": 1,
            "methodVPs": null,
            "publicMethods": null,
            "name": "IBaseAction"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 0,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "vscode.QuickPickItem"
        },
        {
            "publicConstructors": 0,
            "types": [
                "CLASS",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": 0,
            "methodVariants": 0,
            "classVariants": 3,
            "methodVPs": 0,
            "publicMethods": 0,
            "name": "Base"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/imswitcher.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/targets.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/ascii.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/bang.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/breakpoints.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/close.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/history.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/jumps.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/marks.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/move.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/print.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/put.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/read.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/redo.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/retab.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/smile.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/sort.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/expression.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/matching/quoteMatcher.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/matching/tagMatcher.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/completion/lineCompletionProvider.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/remapper.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/neovimValidator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/vimrcValidator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/error.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/globals.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/history/historyFile.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode/modeHandlerMap.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/neovim.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE",
                "CORE_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/browser/constants.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE",
                "CORE_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE",
                "CORE_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/browser/history.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE",
                "CORE_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node/constants.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE",
                "CORE_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE",
                "CORE_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node/history.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/register/register.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/compositionState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/remapState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/statusBar.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/taskQueue.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textEditor.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/sentence.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/transformations/execute.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/child_process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/externalCommand.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/logger.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/os.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/util.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "VARIANT_FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/expression.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/parsimmon.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/history/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/lodash.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/parsimmon.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/lodash.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/motion/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/completion/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/jumps/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/util.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/transformations/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/browser/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/queue.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/parsimmon.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject/lodash.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands/platform/constants.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/os.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/matching/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node/util.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/child_process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/types.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/languages/python/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/history/platform/history.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/child_process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/register/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/jumps/platform/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators/process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/fs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/package.json.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/child_process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/platform/constants.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/lib/attach.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/path.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim/lib/api/Neovim.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state/platform/constants.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/vscode.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE",
                "OUT_OF_SCOPE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode/process.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/extension.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/extensionBase.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/extensionWeb.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/base.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/commandLine.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/fold.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/replace.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/scroll.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/search.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands/window.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/include-plugins.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/languages/python/motion.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "FILE"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VARIANT_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VARIANT_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/browser"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VARIANT_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform/node"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VARIANT_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/textobject"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VARIANT_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/util"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VARIANT_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/vimscript"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VP_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/platform"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY",
                "VP_FOLDER"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/targets"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/cmd_line/commands"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/matching"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/motion"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/common/number"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/completion"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/configuration/validators"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/history"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/jumps"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/mode"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/neovim"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/register"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/state"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/transformations"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/syntaxes"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "./experiments/Vim"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/.github"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/.github/ISSUE_TEMPLATE"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/.github/workflows"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/.husky"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/.vscode"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/build"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/images"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/images/design"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/commands"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/languages"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/languages/python"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins"
        },
        {
            "publicConstructors": null,
            "types": [
                "DIRECTORY"
            ],
            "constructorVPs": null,
            "methodVariants": null,
            "classVariants": null,
            "methodVPs": null,
            "publicMethods": null,
            "name": "experiments/Vim/src/actions/plugins/easymotion"
        }
    ],
    "alllinks": [
        {
            "trgt_range": "1: :73",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :105",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "trgt_range": "1: :16",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :22",
            "target": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "trgt_range": "1: :14",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :61",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :48",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :44",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :80",
            "target": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "trgt_range": "1: :14",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :17",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "trgt_range": "1: :14",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :17",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "trgt_range": "1: :32",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :31",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "trgt_range": "1: :12",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :19",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :18",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "trgt_range": "1: :10",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :10",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "trgt_range": "1: :29",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :29",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "trgt_range": "1: :61",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :48",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "trgt_range": "1: :27",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :27",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "trgt_range": "1: :48",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :44",
            "target": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :80",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :105",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :80",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :82",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :13",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :14",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "trgt_range": "1: :62",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :67",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "trgt_range": "1: :111",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/platform/node/fs.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :130",
            "target": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "trgt_range": null,
            "percentage": null,
            "clone": null,
            "source": "experiments/Vim/src/platform/node/fs.ts",
            "type": "CORE_CONTENT",
            "src_range": null,
            "target": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "trgt_range": "1: :2686",
            "percentage": null,
            "clone": 3,
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "CODE_CLONE",
            "src_range": "1: :2366",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/imswitcher.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/sneak.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/surround.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/targets.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/targets.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/targets.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/targets.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/wrapping.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line"
        },
        {
            "source": "experiments/Vim/src/cmd_line",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/ascii.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/ascii.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/bang.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/bang.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/breakpoints.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/breakpoints.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/close.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/close.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/copy.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/delete.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/digraph.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/fileInfo.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/goto.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/gotoLine.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/history.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/history.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/jumps.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/jumps.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/marks.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/marks.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/move.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/move.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/nohl.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/only.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/print.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/print.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/read.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/read.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/redo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/redo.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/retab.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/retab.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/sh.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/shift.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/smile.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/smile.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/sort.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/sort.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/tab.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/terminal.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/undo.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/vscode.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/write.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/writequit.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/writequitall.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/commands/yank.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/cmd_line/expression.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line",
            "type": "CHILD",
            "target": "experiments/Vim/src/cmd_line/expression.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/common"
        },
        {
            "source": "experiments/Vim/src/common",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching/matcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/quoteMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching/quoteMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/matching/tagMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/matching/tagMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/motion"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/motion/cursor.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/common",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/number"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src/common/number",
            "type": "CHILD",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/completion"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/completion/lineCompletionProvider.ts"
        },
        {
            "source": "experiments/Vim/src/completion",
            "type": "CHILD",
            "target": "experiments/Vim/src/completion/lineCompletionProvider.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/word.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/expression.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/util/externalCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/targetsConfig.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/wrapping.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configuration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/configurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/decoration.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/decoration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/state/remapState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/globals.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/iconfiguration.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/iconfigurationValidator.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/notation.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/remapper.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/remapper.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/neovimValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/neovimValidator.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/remappingValidator.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/validators/vimrcValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/validators/vimrcValidator.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts"
        },
        {
            "source": "experiments/Vim/src/configuration",
            "type": "CHILD",
            "target": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/expression.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/util/externalCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/globals.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/history"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/history/historyFile.ts"
        },
        {
            "source": "experiments/Vim/src/history",
            "type": "CHILD",
            "target": "experiments/Vim/src/history/historyFile.ts"
        },
        {
            "source": "experiments/Vim/src/history",
            "type": "CHILD",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/jumps"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/jumps",
            "type": "CHILD",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/jumps",
            "type": "CHILD",
            "target": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/wrapping.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/mode.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/modeData.ts"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandlerMap.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/mode/modeHandlerMap.ts"
        },
        {
            "source": "experiments/Vim/src/mode",
            "type": "CHILD",
            "target": "experiments/Vim/src/mode/modeHandlerMap.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/neovim"
        },
        {
            "source": "experiments/Vim/src/neovim",
            "type": "CHILD",
            "target": "experiments/Vim/src/neovim/neovim.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform"
        },
        {
            "source": "experiments/Vim/src/platform",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser"
        },
        {
            "source": "experiments/Vim/src/platform/browser",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser/constants.ts"
        },
        {
            "source": "experiments/Vim/src/platform/browser",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser/fs.ts"
        },
        {
            "source": "experiments/Vim/src/platform/browser",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/browser/history.ts"
        },
        {
            "source": "experiments/Vim/src/platform",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node"
        },
        {
            "source": "experiments/Vim/src/platform/node",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node/constants.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node/fs.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/platform/node/fs.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node/fs.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node",
            "type": "CHILD",
            "target": "experiments/Vim/src/platform/node/history.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/register"
        },
        {
            "source": "experiments/Vim/src/register",
            "type": "CHILD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/register/register.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/state"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/compositionState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/compositionState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/globalState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/recordedState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/remapState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/remapState.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/replaceState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/searchState.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/substituteState.ts"
        },
        {
            "source": "experiments/Vim/src/state",
            "type": "CHILD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/jumps/jump.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/statusBar.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/taskQueue.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/taskQueue.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/paragraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textEditor.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/paragraph.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/sentence.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/sentence.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/textobject.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/word.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/util.ts"
        },
        {
            "source": "experiments/Vim/src/textobject",
            "type": "CHILD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/textobject/word.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations"
        },
        {
            "source": "experiments/Vim/src/transformations",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations/execute.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/execute.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations/transformations.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "source": "experiments/Vim/src/transformations",
            "type": "CHILD",
            "target": "experiments/Vim/src/transformations/transformer.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/util"
        },
        {
            "source": "experiments/Vim/src/util/child_process.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/child_process.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/child_process.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/clipboard.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/decorationUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/externalCommand.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/externalCommand.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util/vscodeContext.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util/clipboard.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/taskQueue.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/logger.ts"
        },
        {
            "source": "experiments/Vim/src/util/os.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/os.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/os.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/util/path.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/path.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/specialKeys.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/statusBarTextUtils.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/util.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/src/util",
            "type": "CHILD",
            "target": "experiments/Vim/src/util/vscodeContext.ts"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommand.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/exCommandParser.ts"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/expression.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/expression.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/expression.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/parserUtils.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript",
            "type": "CHILD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/vimscript/pattern.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/syntaxes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandFold"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/util/clipboard.ts",
            "type": "EXPORT",
            "target": "Clipboard"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "MarkerGenerator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "EXPORT",
            "target": "MarkerGenerator"
        },
        {
            "source": "experiments/Vim/src/platform/browser/history.ts",
            "type": "EXPORT",
            "target": "HistoryBase"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "AsciiCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "AsciiCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "EXPORT",
            "target": "AsciiCommand"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/util/vscodeContext.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/util/clipboard.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/taskQueue.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "IMPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/util/logger.ts",
            "type": "EXPORT",
            "target": "Logger"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "GotoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "GotoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "EXPORT",
            "target": "GotoCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "QuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/common/matching/quoteMatcher.ts",
            "type": "EXPORT",
            "target": "QuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WallCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WallCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "EXPORT",
            "target": "WallCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "HistoryFile"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "EXPORT",
            "target": "HistoryFile"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/jumps/jump.ts",
            "type": "EXPORT",
            "target": "Jump"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "NumericString"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "NumericString"
        },
        {
            "source": "experiments/Vim/src/common/number/numericString.ts",
            "type": "EXPORT",
            "target": "NumericString"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "FileInfoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "FileInfoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "EXPORT",
            "target": "FileInfoCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ShCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ShCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "EXPORT",
            "target": "ShCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "experiments/Vim/src/util/vscodeContext.ts",
            "type": "EXPORT",
            "target": "VSCodeContext"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ExitReplaceMode"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "EXPORT",
            "target": "HistoryBase"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "CompositionState"
        },
        {
            "source": "experiments/Vim/src/state/compositionState.ts",
            "type": "EXPORT",
            "target": "CompositionState"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "EasyMotion"
        },
        {
            "source": "IEasyMotion",
            "type": "IMPLEMENTS",
            "target": "EasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "EXPORT",
            "target": "EasyMotion"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "InsertTextTransformation"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Transformer"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "IMPORT",
            "target": "Transformer"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "EXPORT",
            "target": "Transformer"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "EXPORT",
            "target": "IQuitCommandArguments"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionMoveOptionsBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionMoveOptionsBase"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/common/motion/cursor.ts",
            "type": "EXPORT",
            "target": "Cursor"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "PairMatcher"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "PairMatcher"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "EXPORT",
            "target": "PairMatcher"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "IMPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/notation.ts",
            "type": "EXPORT",
            "target": "Notation"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "PluginDefaultMappings"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "EXPORT",
            "target": "PluginDefaultMappings"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "SneakForward"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "SneakForward"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "EXPORT",
            "target": "SneakForward"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textobject/paragraph.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textobject/sentence.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "IMPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "EXPORT",
            "target": "TextEditor"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "TerminalCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "TerminalCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "EXPORT",
            "target": "TerminalCommand"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "SubstituteState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "SubstituteState"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "EXPORT",
            "target": "SubstituteState"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "EXPORT",
            "target": "VimrcImpl"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "UndoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "UndoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "EXPORT",
            "target": "UndoCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RegisterCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "RegisterCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RegisterCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "EXPORT",
            "target": "RegisterCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "TagMatcher"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "EXPORT",
            "target": "TagMatcher"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEditorScroll"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "RemapState"
        },
        {
            "source": "experiments/Vim/src/state/remapState.ts",
            "type": "EXPORT",
            "target": "RemapState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "GotoLineCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "GotoLineCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "EXPORT",
            "target": "GotoLineCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "PrintCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "PrintCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "EXPORT",
            "target": "PrintCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RedoCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RedoCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "EXPORT",
            "target": "RedoCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandQuit"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "CopyCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "CopyCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "EXPORT",
            "target": "CopyCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "LeftCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "LeftCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "EXPORT",
            "target": "LeftCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "MoveCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "MoveCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "EXPORT",
            "target": "MoveCommand"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "IMPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "EXPORT",
            "target": "BaseAction"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "EXPORT",
            "target": "IDeleteCommandArguments"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "CamelCaseBaseMovement"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "EXPORT",
            "target": "IDigraphsCommandArguments"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "EXPORT",
            "target": "ISortCommandArguments"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "EXPORT",
            "target": "YankCommandArguments"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SmileCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SmileCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "EXPORT",
            "target": "SmileCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "EXPORT",
            "target": "IWriteQuitAllCommandArguments"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "NeovimValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "EXPORT",
            "target": "NeovimValidator"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "EXPORT",
            "target": "IRetabCommandArguments"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/searchUtils.ts",
            "type": "EXPORT",
            "target": "SearchFlags"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionNCharSearchCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "NohlCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "NohlCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "EXPORT",
            "target": "NohlCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "EXPORT",
            "target": "IWriteQuitCommandArguments"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "InputMethodSwitcherConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "EXPORT",
            "target": "InputMethodSwitcherConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ReadCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ReadCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "EXPORT",
            "target": "ReadCommand"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "VimrcValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "EXPORT",
            "target": "VimrcValidator"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "ReplaceState"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "IMPORT",
            "target": "ReplaceState"
        },
        {
            "source": "experiments/Vim/src/state/replaceState.ts",
            "type": "EXPORT",
            "target": "ReplaceState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "EXPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "IMPORT",
            "target": "ExCommand"
        },
        {
            "source": "IConfigurationValidator",
            "type": "IMPLEMENTS",
            "target": "RemappingValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "EXPORT",
            "target": "RemappingValidator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasymotionTrigger"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/transformations/transformer.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "EXPORT",
            "target": "PositionDiff"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IModeSpecificStrings"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IModeSpecificStrings"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "EXPORT",
            "target": "IPutCommandArguments"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ShiftCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ShiftCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "EXPORT",
            "target": "ShiftCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "CloseCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "CloseCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "EXPORT",
            "target": "CloseCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "BaseAction",
            "type": "EXTENDS",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "BaseOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "BaseOperator"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ReplaceOperator"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "VsCodeCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "VsCodeCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "EXPORT",
            "target": "VsCodeCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "TextObject"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "IModeHandler"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "EXPORT",
            "target": "IModeHandler"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandLineAction"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "OnlyCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "OnlyCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "OnlyCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "EXPORT",
            "target": "OnlyCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEscInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandEscInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandEscInsertMode"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "SurroundState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "EXPORT",
            "target": "SurroundState"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/platform/node/history.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/globals.ts",
            "type": "EXPORT",
            "target": "Globals"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "EXPORT",
            "target": "NeovimWrapper"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WriteCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WriteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "WriteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "EXPORT",
            "target": "WriteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "EXPORT",
            "target": "IBangCommandArguments"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "CommandLine"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "EXPORT",
            "target": "CommandLine"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "SmartQuotes"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "TabCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "TabCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "TabCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "EXPORT",
            "target": "TabCommand"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "IMPORT",
            "target": "ReplaceString"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "ReplaceString"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "DocumentContentChangeAction"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "ExpandingSelection"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "ExpandingSelection"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "ExpandingSelection"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "ReplaceTextTransformation"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "EXPORT",
            "target": "QuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionCharMoveOpions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionCharMoveOpions"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "YankCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "YankCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "EXPORT",
            "target": "YankCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "SmartQuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts",
            "type": "EXPORT",
            "target": "SmartQuoteMatcher"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "DeleteCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DeleteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "EXPORT",
            "target": "DeleteCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WriteQuitCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WriteQuitCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "WriteQuitCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "EXPORT",
            "target": "WriteQuitCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "PutExCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "PutExCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "EXPORT",
            "target": "PutExCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "IRegisterContent"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "EXPORT",
            "target": "IRegisterContent"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "WriteQuitAllCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "WriteQuitAllCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "EXPORT",
            "target": "WriteQuitAllCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SortCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SortCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "EXPORT",
            "target": "SortCommand"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "SurroundOperator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "EXPORT",
            "target": "ValidatorResults"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "BufferDeleteCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "BufferDeleteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "EXPORT",
            "target": "BufferDeleteCommand"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "JumpTracker"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "EXPORT",
            "target": "JumpTracker"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "EXPORT",
            "target": "IHistoryCommandArguments"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/state/remapState.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "IMPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IKeyRemapping"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "BangCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "BangCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "EXPORT",
            "target": "BangCommand"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "InsertTextVSCodeTransformation"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "InsertTextVSCodeTransformation"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/state/recordedState.ts",
            "type": "EXPORT",
            "target": "RecordedState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "IMovement"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "EXPORT",
            "target": "IMovement"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "BasePutCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionWordMoveOpions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionWordMoveOpions"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "FileCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "EXPORT",
            "target": "FileCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RetabCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RetabCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "EXPORT",
            "target": "RetabCommand"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "IMPORT",
            "target": "IVimrcKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrcKeyRemappingBuilder.ts",
            "type": "IMPORT",
            "target": "IVimrcKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IVimrcKeyRemapping"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "EXPORT",
            "target": "Register"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "DigraphsCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DigraphsCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "EXPORT",
            "target": "DigraphsCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextSingleQuotes"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "UnimplementedCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "HistoryCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "HistoryCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "EXPORT",
            "target": "HistoryCommand"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "DeleteTextRangeTransformation"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "NextHandlerClass"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/expression.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/util/externalCommand.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "IMPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/error.ts",
            "type": "EXPORT",
            "target": "VimError"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "Marker"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts",
            "type": "IMPORT",
            "target": "Marker"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "Marker"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "PythonDocument"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "EXPORT",
            "target": "PythonDocument"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "IMPORT",
            "target": "Pattern"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "EXPORT",
            "target": "Pattern"
        },
        {
            "source": "IModeHandler",
            "type": "IMPLEMENTS",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandlerMap.ts",
            "type": "IMPORT",
            "target": "ModeHandler"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "EXPORT",
            "target": "ModeHandler"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharSearchCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "BaseEasyMotionCommand"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IAutoSwitchInputMethod"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IAutoSwitchInputMethod"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "EXPORT",
            "target": "SearchState"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "MoveCursorTransformation"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "Match"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "Match"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "Match"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "AddBreakpointCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "Remappers"
        },
        {
            "source": "IRemapper",
            "type": "IMPLEMENTS",
            "target": "Remappers"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "EXPORT",
            "target": "Remappers"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IHighlightedYankConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IHighlightedYankConfiguration"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "Dot"
        },
        {
            "source": "SurroundOperator",
            "type": "EXTENDS",
            "target": "YankSurroundOperator"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "EXPORT",
            "target": "BaseMovement"
        },
        {
            "source": "BaseAction",
            "type": "EXTENDS",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "BaseMovement"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "ICamelCaseMotionConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "ICamelCaseMotionConfiguration"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOnly"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "VSCodeCommandTransformation"
        },
        {
            "source": "IConfiguration",
            "type": "IMPLEMENTS",
            "target": "Configuration"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharFindForwardCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveByScreenLine"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "ISmartQuotesConfiguration"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "Macro"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/imswitcher.ts",
            "type": "EXPORT",
            "target": "InputMethodSwitcher"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "ITargetsConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "ITargetsConfiguration"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "CamelCaseTextObjectMovement"
        },
        {
            "source": "experiments/Vim/src/transformations/transformations.ts",
            "type": "EXPORT",
            "target": "ContentChangeTransformation"
        },
        {
            "source": "experiments/Vim/src/configuration/configuration.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/decoration.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/pluginDefaultMappings.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/globals.ts",
            "type": "IMPORT",
            "target": "IConfiguration"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfiguration.ts",
            "type": "EXPORT",
            "target": "IConfiguration"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectWord"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "SelectWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectWord"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharFindBackwardCommand"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineTab"
        },
        {
            "source": "HistoryFile",
            "type": "EXTENDS",
            "target": "SearchHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "SearchHistory"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "EXPORT",
            "target": "SearchHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "EXPORT",
            "target": "Address"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "MarksCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "MarksCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "EXPORT",
            "target": "MarksCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "JumpsCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "JumpsCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "EXPORT",
            "target": "JumpsCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ReplaceModeToInsertMode"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/remappingValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/vimrcValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/neovimValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/configurationValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/validators/inputMethodSwitcherValidator.ts",
            "type": "IMPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "experiments/Vim/src/configuration/iconfigurationValidator.ts",
            "type": "EXPORT",
            "target": "IConfigurationValidator"
        },
        {
            "source": "IRemapper",
            "type": "IMPLEMENTS",
            "target": "Remapper"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "EXPORT",
            "target": "Remapper"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandToggleFold"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharTilCharacterForwardCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToRightPane"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "ForceStopRemappingError"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "IMPORT",
            "target": "ForceStopRemappingError"
        },
        {
            "source": "experiments/Vim/src/error.ts",
            "type": "EXPORT",
            "target": "ForceStopRemappingError"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "SearchOptions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "SearchOptions"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "SearchOptions"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SetCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "SetCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SetCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "EXPORT",
            "target": "SetCommand"
        },
        {
            "source": "HistoryFile",
            "type": "EXTENDS",
            "target": "CommandLineHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "CommandLineHistory"
        },
        {
            "source": "experiments/Vim/src/history/historyFile.ts",
            "type": "EXPORT",
            "target": "CommandLineHistory"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "NoOpCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "EXPORT",
            "target": "NoOpCommand"
        },
        {
            "source": "CommandEditorScroll",
            "type": "EXTENDS",
            "target": "CommandCtrlE"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "EXPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/neovim/neovim.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/write.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/file.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/close.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/set.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/vscode.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/quit.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bufferDelete.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/tab.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/common/matching/matcher.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/nohl.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/only.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/register.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/smile.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sh.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/fileInfo.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/common/matching/tagMatcher.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequit.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/read.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/wall.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/terminal.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/completion/lineCompletionProvider.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/jumps/jump.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/register/register.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/jumps/jumpTracker.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/util/statusBarTextUtils.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/textEditor.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/util/util.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "IMPORT",
            "target": "VimState"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "EasyMotionSearchAction"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "EasyMotionSearchAction"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "EasyMotionSearchAction"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "RightCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "RightCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "EXPORT",
            "target": "RightCommand"
        },
        {
            "source": "CamelCaseBaseMovement",
            "type": "EXTENDS",
            "target": "MoveCamelCaseWordBegin"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandCloseFold"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharTilCharacterBidirectionalCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DeleteBreakpointCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertPreviousText"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandInsertPreviousText"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandInsertPreviousText"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastSingleQuotes"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectABigWord"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "SelectABigWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectABigWord"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "BackspaceInReplaceMode"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "ISubstituteCommandArguments"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTwoCharTilBackwardCommand"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "SneakBackward"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "SneakBackward"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "EXPORT",
            "target": "SneakBackward"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "ClearJumpsCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ClearJumpsCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "EXPORT",
            "target": "ClearJumpsCommand"
        },
        {
            "source": "CommandEditorScroll",
            "type": "EXTENDS",
            "target": "CommandCtrlY"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "SubstituteFlags"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandCloseAllFolds"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordExactForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToLowerPane"
        },
        {
            "source": "CamelCaseBaseMovement",
            "type": "EXTENDS",
            "target": "MoveCamelCaseWordEnd"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionSearchCommand"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandOpenFold"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "DeleteMarksCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "DeleteMarksCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "EXPORT",
            "target": "DeleteMarksCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "IEasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "IMPORT",
            "target": "IEasyMotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/types.ts",
            "type": "EXPORT",
            "target": "IEasyMotion"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionFindForwardCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandScrollAndMoveCursor"
        },
        {
            "source": "SurroundOperator",
            "type": "EXTENDS",
            "target": "CommandSurroundModeStartVisual"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandOpenAllFolds"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/marks.ts",
            "type": "IMPORT",
            "target": "IMark"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "EXPORT",
            "target": "IMark"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertPreviousTextAndQuit"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionFindBackwardCommand"
        },
        {
            "source": "ExpandingSelection",
            "type": "EXTENDS",
            "target": "SelectAnExpandingBlock"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectAnExpandingBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToUpperPane"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextDoubleQuotes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ReplaceInReplaceMode"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandCloseAllFoldsRecursively"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordForward"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveUpByScreenLine"
        },
        {
            "source": "CamelCaseBaseMovement",
            "type": "EXTENDS",
            "target": "MoveBeginningCamelCaseWord"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTilCharacterForwardCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "CenterCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "CenterCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "EXPORT",
            "target": "CenterCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "SubstituteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "SubstituteCommand"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "SubstituteCommand"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "EXPORT",
            "target": "SubstituteCommand"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "DeleteOperator"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "DeleteOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "DeleteOperator"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "EXPORT",
            "target": "BaseCommand"
        },
        {
            "source": "BaseAction",
            "type": "EXTENDS",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "IMPORT",
            "target": "BaseCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IndentCommand"
        },
        {
            "source": "CommandFold",
            "type": "EXTENDS",
            "target": "CommandOpenAllFoldsRecursively"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastDoubleQuotes"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTilCharacterBidirectionalCommand"
        },
        {
            "source": "SurroundOperator",
            "type": "EXTENDS",
            "target": "CommandSurroundModeStartVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveToLeftPane"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveDownByScreenLine"
        },
        {
            "source": "CamelCaseTextObjectMovement",
            "type": "EXTENDS",
            "target": "SelectInnerCamelCaseWord"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommand.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "IMPORT",
            "target": "LineRange"
        },
        {
            "source": "experiments/Vim/src/vimscript/lineRange.ts",
            "type": "EXPORT",
            "target": "LineRange"
        },
        {
            "source": "EasyMotionCharMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionTilBackwardCommand"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "AddFold"
        },
        {
            "source": "EasyMotionSearchAction",
            "type": "IMPLEMENTS",
            "target": "SearchByCharCommand"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "SearchByCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "SearchByCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "SearchByCharCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastDoubleQuotes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordExactBackward"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfWordForwardsCommand"
        },
        {
            "source": "CommandLine",
            "type": "EXTENDS",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/transformations/execute.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "IMPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "EXPORT",
            "target": "ExCommandLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CreateUndoPoint"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveFullPageUp"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveByScreenLineMaintainDesiredColumn"
        },
        {
            "source": "ExCommand",
            "type": "EXTENDS",
            "target": "ListBreakpointsCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurround"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CycleThroughPanes"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DisableExtension"
        },
        {
            "source": "IndentCommand",
            "type": "EXTENDS",
            "target": "IncreaseIndent"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "DeleteOperatorVisual"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfWordBidirectionalCommand"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextBacktick"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionLineForward"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveFullPageDown"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "RemoveFold"
        },
        {
            "source": "IndentCommand",
            "type": "EXTENDS",
            "target": "DecreaseIndent"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "ExCommandLineEnter"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerWord"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "SelectInnerWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerWord"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionLineBackward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EnableExtension"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchCurrentWordBackward"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextBacktick"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandBackspaceInInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandBackspaceInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandBackspaceInInsertMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "VerticalSplit"
        },
        {
            "source": "CommandSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundDeleteSurround"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "YankOperator"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "IMPORT",
            "target": "YankOperator"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "YankOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "YankOperator"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveHalfPageDown"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionJumpToAnywhereCommand"
        },
        {
            "source": "MoveByScreenLineMaintainDesiredColumn",
            "type": "EXTENDS",
            "target": "MoveDownFoldFix"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "SearchCommandLineEnter"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastBacktick"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionEndOfWordForwardsCommand"
        },
        {
            "source": "experiments/Vim/src/vimscript/exCommandParser.ts",
            "type": "IMPORT",
            "target": "Breakpoints"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/breakpoints.ts",
            "type": "EXPORT",
            "target": "Breakpoints"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNumber"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandNumber"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandNumber"
        },
        {
            "source": "CommandScrollAndMoveCursor",
            "type": "EXTENDS",
            "target": "CommandMoveHalfPageUp"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "OrthogonalSplit"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandDeleteInInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "EasyMotionSearchAction",
            "type": "IMPLEMENTS",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "SearchByNCharCommand"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionEndOfWordBidirectionalCommand"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerBigWord"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerBigWord"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchForwards"
        },
        {
            "source": "CommandSurroundDeleteSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundDeleteSurroundCnt"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastBacktick"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionBeginningWordCommand"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "EXPORT",
            "target": "ViewChange"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineEscape"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCenterScroll"
        },
        {
            "source": "CommandSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundChangeSurround"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EvenPaneWidths"
        },
        {
            "source": "EasyMotionWordMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionEndBackwardCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "BasePythonMovement"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertInInsertMode"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandInsertInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "CommandInsertInInsertMode"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundQuote"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "FilterOperator"
        },
        {
            "source": "EasyMotionLineMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfLineForwardsCommand"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineCtrlF"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectSentence"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectSentence"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDown"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSearchBackwards"
        },
        {
            "source": "experiments/Vim/src/state/searchState.ts",
            "type": "IMPORT",
            "target": "SearchOffset"
        },
        {
            "source": "experiments/Vim/src/vimscript/pattern.ts",
            "type": "EXPORT",
            "target": "SearchOffset"
        },
        {
            "source": "EasyMotionLineMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfLineBackwordsCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IncreasePaneWidth"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideQuote"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineBackspace"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCenterScrollFirstChar"
        },
        {
            "source": "CommandSurroundChangeSurround",
            "type": "EXTENDS",
            "target": "CommandSurroundChangeSurroundCnt"
        },
        {
            "source": "EasyMotionLineMoveCommandBase",
            "type": "EXTENDS",
            "target": "EasyMotionStartOfLineBidirectionalCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EasyMotionCharMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "EasyMotionCharMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasyMotionCharMoveCommandBase"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertDigraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurroundAddSurrounding"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ShiftYankOperatorVisual"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonNextFunctionStart"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundNextQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundNextQuote"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DecreasePaneWidth"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineDelete"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRegister"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandRegister"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerSentence"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerSentence"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SearchObject"
        },
        {
            "source": "CommandLine",
            "type": "EXTENDS",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/mode/modeData.ts",
            "type": "IMPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "EXPORT",
            "target": "SearchCommandLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveUp"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "InsertModeRemapper"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonPrevFunctionStart"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "NormalModeRemapper"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "EasyMotionWordMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "EasyMotionWordMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasyMotionWordMoveCommandBase"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideNextQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideNextQuote"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IncreasePaneHeight"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTopScroll"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandlineHome"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "DeleteOperatorXVisual"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "OperatorPendingModeRemapper"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "VisualModeRemapper"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonNextFunctionEnd"
        },
        {
            "source": "Remapper",
            "type": "EXTENDS",
            "target": "CommandLineModeRemapper"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRecordMacro"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "IMPORT",
            "target": "HistoryTracker"
        },
        {
            "source": "experiments/Vim/src/history/historyTracker.ts",
            "type": "EXPORT",
            "target": "HistoryTracker"
        },
        {
            "source": "MoveByScreenLineMaintainDesiredColumn",
            "type": "EXTENDS",
            "target": "MoveUpFoldFix"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectParagraph"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectParagraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurroundAddSurroundingTag"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "EXPORT",
            "target": "CommandSurroundAddSurroundingTag"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "DecreasePaneHeight"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveAroundLastQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveAroundLastQuote"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ChangeOperatorSVisual"
        },
        {
            "source": "SearchObject",
            "type": "EXTENDS",
            "target": "SearchObjectForward"
        },
        {
            "source": "BasePythonMovement",
            "type": "EXTENDS",
            "target": "MovePythonPrevFunctionEnd"
        },
        {
            "source": "BasePutCommand",
            "type": "EXTENDS",
            "target": "PutCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTopScrollFirstChar"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineDeleteWord"
        },
        {
            "source": "SearchObject",
            "type": "EXTENDS",
            "target": "SearchObjectBackward"
        },
        {
            "source": "SmartQuotes",
            "type": "EXTENDS",
            "target": "MoveInsideLastQuote"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "EXPORT",
            "target": "MoveInsideLastQuote"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectInnerParagraph"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerParagraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandQuitRecordMacro"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "CommandQuitRecordMacro"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandQuitRecordMacro"
        },
        {
            "source": "BaseEasyMotionCommand",
            "type": "EXTENDS",
            "target": "EasyMotionLineMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "IMPORT",
            "target": "EasyMotionLineMoveCommandBase"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "EXPORT",
            "target": "EasyMotionLineMoveCommandBase"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineDeleteToBeginning"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "ArrowsInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "ArrowsInInsertMode"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "ArrowsInInsertMode"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "FormatOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertRegisterContent"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandSurroundAddSurroundingFunction"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "EXPORT",
            "target": "CommandSurroundAddSurroundingFunction"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandBottomScroll"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineWordLeft"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectEntire"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectEntire"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "ArrowsInReplaceMode"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineWordRight"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectEntireIgnoringLeadingTrailing"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectEntireIgnoringLeadingTrailing"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ChangeCaseOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExecuteLastMacro"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOneNormalCommandInInsertMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandBottomScrollFirstChar"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineHistoryBack"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "EasyMotionCharInputMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "CommandNextSearchMatch"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCtrlW"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "IndentObjectMatch"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineHistoryForward"
        },
        {
            "source": "PutCommand",
            "type": "EXTENDS",
            "target": "PutBeforeCommand"
        },
        {
            "source": "ChangeCaseOperator",
            "type": "EXTENDS",
            "target": "UpperCaseOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEscEasyMotionCharInputMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExecuteMacro"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandInsertRegisterContentInCommandLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "InsertCharAbove"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "InsertCharAbove"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "InsertCharAbove"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "CommandPreviousSearchMatch"
        },
        {
            "source": "UpperCaseOperator",
            "type": "EXTENDS",
            "target": "UpperCaseWithMotion"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MoveEasyMotion"
        },
        {
            "source": "ChangeCaseOperator",
            "type": "EXTENDS",
            "target": "LowerCaseOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "InsertCharBelow"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "InsertCharBelow"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "EXPORT",
            "target": "InsertCharBelow"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandEsc"
        },
        {
            "source": "LowerCaseOperator",
            "type": "EXTENDS",
            "target": "LowerCaseWithMotion"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandInsertWord"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MarkMovementBOL"
        },
        {
            "source": "ChangeCaseOperator",
            "type": "EXTENDS",
            "target": "ToggleCaseOperator"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineLeftRight"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCtrlUInInsertMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtCursor"
        },
        {
            "source": "ToggleCaseOperator",
            "type": "EXTENDS",
            "target": "ToggleCaseWithMotion"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MarkMovement"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "IndentOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateAutocompleteDown"
        },
        {
            "source": "IndentObjectMatch",
            "type": "EXTENDS",
            "target": "InsideIndentObject"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLinePaste"
        },
        {
            "source": "IndentObjectMatch",
            "type": "EXTENDS",
            "target": "InsideIndentObjectAbove"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandReplaceAtCursorFromNormalMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "NextMark"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "IndentOperatorVisualAndVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateAutocompleteUp"
        },
        {
            "source": "IndentObjectMatch",
            "type": "EXTENDS",
            "target": "InsideIndentObjectBoth"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandCtrlLInSearchMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOverrideCopy"
        },
        {
            "source": "TextObject",
            "type": "EXTENDS",
            "target": "SelectArgument"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCtrlVInInsertMode"
        },
        {
            "source": "PutCommand",
            "type": "EXTENDS",
            "target": "GPutCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "PrevMark"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "IndentOperatorVisualBlock"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandAdvanceCurrentMatch"
        },
        {
            "source": "PutBeforeCommand",
            "type": "EXTENDS",
            "target": "GPutBeforeCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowLineAutocomplete"
        },
        {
            "source": "CommandLineAction",
            "type": "EXTENDS",
            "target": "CommandLineType"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "OutdentOperator"
        },
        {
            "source": "PutCommand",
            "type": "EXTENDS",
            "target": "PutWithIndentCommand"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "NextMarkLinewise"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandCmdA"
        },
        {
            "source": "PutBeforeCommand",
            "type": "EXTENDS",
            "target": "PutBeforeWithIndentCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "NewLineInsertMode"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "OutdentOperatorVisualAndVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "MarkCommand"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandReplaceAtCursorFromInsertMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "PrevMarkLinewise"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowCommandLine"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "OutdentOperatorVisualBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CreateUndoPoint"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowCommandHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "CommandShowCommandHistory"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandShowCommandHistory"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLeft"
        },
        {
            "source": "SelectArgument",
            "type": "EXTENDS",
            "target": "SelectInnerArgument"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectInnerArgument"
        },
        {
            "source": "SelectArgument",
            "type": "EXTENDS",
            "target": "SelectAroundArgument"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "EXPORT",
            "target": "SelectAroundArgument"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandShowSearchHistory"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "IMPORT",
            "target": "CommandShowSearchHistory"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandShowSearchHistory"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveRight"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "IMPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "IMPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "ChangeOperator"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "YankVisualBlockMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDownNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandDot"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveUpNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRepeatSubstitution"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDownUnderscore"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "CommentOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoToOtherEndOfHighlightedText"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveToColumn"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ROT13Operator"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "EXPORT",
            "target": "ROT13Operator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoToOtherSideOfHighlightedText"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandUndo"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "IMPORT",
            "target": "CommandUndo"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandUndo"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFindForward"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "CommentBlockOperator"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandUndoOnLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFindBackward"
        },
        {
            "source": "BaseOperator",
            "type": "EXTENDS",
            "target": "ActionVisualReflowParagraph"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandRedo"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "IMPORT",
            "target": "CommandRedo"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandRedo"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandDeleteToLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveTilForward"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveTilBackward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandYankFullLine"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandYankFullLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveRepeat"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandChangeToLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveRepeatReversed"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandClearLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLineBegin"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExitVisualMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandVisualMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineBegin"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenNonBlank"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandReselectVisual"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineEndNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandVisualBlockMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenLineCenter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExitVisualBlockMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveUpByDisplayLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandVisualLineMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveDownByDisplayLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandExitVisualLineMode"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveUpByScreenLineVisualLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOpenFile"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveDownByScreenLineVisualLine"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveUpByScreenLineVisualBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "GoToDeclaration"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveDownByScreenLineVisualBlock"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "GoToDefinition"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToRight"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandOpenLink"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoBackInChangelist"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToLeft"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandGoForwardInChangelist"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToRightHalf"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtLastChange"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtLastChange"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtLastChange"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveScreenToLeftHalf"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtFirstCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtFirstCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtFirstCharacter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtLineBegin"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtLineBegin"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtLineBegin"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveToLineFromViewPortTop"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAfterCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAfterCursor"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAfterCursor"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveToLineFromViewPortBottom"
        },
        {
            "source": "MoveByScreenLine",
            "type": "EXTENDS",
            "target": "MoveToMiddleLineInViewPort"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertAtLineEnd"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertAtLineEnd"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertAtLineEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNonBlank"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertNewLineAbove"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertNewLineAbove"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertNewLineAbove"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNonBlankFirst"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNonBlankLast"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandInsertNewLineBefore"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "IMPORT",
            "target": "CommandInsertNewLineBefore"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandInsertNewLineBefore"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "EndOfSpecificLine"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateBack"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveWordBegin"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandNavigateForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTabNext"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFullWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveFullWordBegin"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveFullWordBegin"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandTabPrevious"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveWordEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteChar"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteChar"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveFullWordEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteCharWithDeleteKey"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteCharWithDeleteKey"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLastWordEnd"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveLastFullWordEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteLastChar"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteLastChar"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveBeginningWord"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveBeginningFullWord"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MovePreviousSentenceBegin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "GoToOffset"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveNextSentenceBegin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveParagraphEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinVisualMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveParagraphBegin"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveSectionBoundary"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinVisualBlockMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinNoWhitespace"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MoveNextSectionBegin"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MoveNextSectionEnd"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MovePreviousSectionBegin"
        },
        {
            "source": "MoveSectionBoundary",
            "type": "EXTENDS",
            "target": "MovePreviousSectionEnd"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionJoinNoWhitespaceVisualMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveToMatchingBracket"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionReplaceCharacter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionReplaceCharacterVisual"
        },
        {
            "source": "ExpandingSelection",
            "type": "EXTENDS",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "IMPORT",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideCharacter"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionReplaceCharacterVisualBlock"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveInsideParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideParentheses"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteVisualBlock"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundParentheses"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveCurlyBrace"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionShiftDVisualBlock"
        },
        {
            "source": "MoveCurlyBrace",
            "type": "EXTENDS",
            "target": "MoveInsideCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideCurlyBrace"
        },
        {
            "source": "MoveCurlyBrace",
            "type": "EXTENDS",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundCurlyBrace"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveInsideCaret"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideCaret"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideCaret"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualBlockMode"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveAroundCaret"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundCaret"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundCaret"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundCaret"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveInsideSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveInsideSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideSquareBracket"
        },
        {
            "source": "MoveInsideCharacter",
            "type": "EXTENDS",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "IMPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundSquareBracket"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeInVisualBlockMode"
        },
        {
            "source": "BaseMovement",
            "type": "EXTENDS",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "IMPORT",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveQuoteMatch"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeToEOLInVisualBlockMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualLineModeCommand"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveInsideSingleQuotes"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualLineMode"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundSingleQuotes"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveInsideDoubleQuotes"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualLineModeAppend"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundDoubleQuotes"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualMode"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveInsideBacktick"
        },
        {
            "source": "MoveQuoteMatch",
            "type": "EXTENDS",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundBacktick"
        },
        {
            "source": "ActionGoToInsertVisualLineModeCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualModeAppend"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedRoundBracketBackward"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedRoundBracketForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToInsertVisualBlockModeAppend"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedCurlyBracketBackward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteCharVisualLineMode"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionDeleteCharVisualLineMode"
        },
        {
            "source": "MoveToMatchingBracket",
            "type": "EXTENDS",
            "target": "MoveToUnclosedCurlyBracketForward"
        },
        {
            "source": "ExpandingSelection",
            "type": "EXTENDS",
            "target": "MoveTagMatch"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionDeleteLineVisualMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeLineVisualModeS"
        },
        {
            "source": "MoveTagMatch",
            "type": "EXTENDS",
            "target": "MoveInsideTag"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveInsideTag"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveInsideTag"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeLineVisualMode"
        },
        {
            "source": "MoveTagMatch",
            "type": "EXTENDS",
            "target": "MoveAroundTag"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "IMPORT",
            "target": "MoveAroundTag"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "IMPORT",
            "target": "MoveAroundTag"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "EXPORT",
            "target": "MoveAroundTag"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeLineVisualBlockMode"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionChangeChar"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ToggleCaseAndMoveForward"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "IncrementDecrementNumberAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "IncrementNumberAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "DecrementNumberAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "IncrementNumberStaircaseAction"
        },
        {
            "source": "IncrementDecrementNumberAction",
            "type": "EXTENDS",
            "target": "DecrementNumberStaircaseAction"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "CommandUnicodeName"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "IMPORT",
            "target": "CommandUnicodeName"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "CommandUnicodeName"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionTriggerHover"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdD"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "IMPORT",
            "target": "ActionOverrideCmdD"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "EXPORT",
            "target": "ActionOverrideCmdD"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdDInsert"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdAltDown"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionOverrideCmdAltUp"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionShowFileInfo"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "WriteQuit"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "Quit"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ActionGoToAlternateFile"
        },
        {
            "source": "BaseCommand",
            "type": "EXTENDS",
            "target": "ShowFileOutline"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/.github"
        },
        {
            "source": "experiments/Vim/.github",
            "type": "CHILD",
            "target": "experiments/Vim/.github/ISSUE_TEMPLATE"
        },
        {
            "source": "experiments/Vim/.github",
            "type": "CHILD",
            "target": "experiments/Vim/.github/workflows"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/.husky"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/.vscode"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/build"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/extension.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/extensionBase.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/extensionBase.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/extensionBase.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/extensionWeb.ts"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/images"
        },
        {
            "source": "experiments/Vim/images",
            "type": "CHILD",
            "target": "experiments/Vim/images/design"
        },
        {
            "source": "./experiments/Vim",
            "type": "CHILD",
            "target": "experiments/Vim/src"
        },
        {
            "source": "experiments/Vim/src",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/sneak.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/baseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/undo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/redo.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/history.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/ascii.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/digraph.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/digraphs.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/fold.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/fold.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/insert.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/put.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/replace.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/replace.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/scroll.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/scroll.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/search.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/search.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/commands/window.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/commands/window.ts"
        },
        {
            "source": "experiments/Vim/extensionWeb.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/include-main.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/include-plugins.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/include-plugins.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/languages"
        },
        {
            "source": "experiments/Vim/src/actions/languages",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/languages/python"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/languages/python/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/languages/python/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjectHelper.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/smartQuotes.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/targets/lastNextObjects.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/motion.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/textobject/textobject.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/surround.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/replaceWithRegister.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/yank.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-main.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/operator.ts"
        },
        {
            "source": "experiments/Vim/src/actions",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/camelCaseMotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/registerMoveActions.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/actions/include-plugins.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion",
            "type": "CHILD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "LOAD",
            "target": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts"
        }
    ],
    "allnodes": [],
    "linkscompose": [
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/actions/plugins/easymotion/markerGenerator.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/plugins/easymotion/easymotion.cmd.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/actions/plugins/easymotion/types.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/actions/plugins/targets/smartQuotesMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/cmd_line/commandLine.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/cmd_line/commands/file.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/cmd_line/commands/quit.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/cmd_line/commands/set.ts"
        },
        {
            "source": "experiments/Vim/src/state/substituteState.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/cmd_line/commands/substitute.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/writequitall.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/cmd_line/commands/wall.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/matching/quoteMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/matching/tagMatcher.ts"
        },
        {
            "source": "experiments/Vim/src/common/motion/position.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/motion/position.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/common/number/numericString.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/configuration/remapper.ts"
        },
        {
            "source": "experiments/Vim/extension.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/vimrc.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/configuration/vimrc.ts"
        },
        {
            "source": "experiments/Vim/src/statusBar.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/error.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/configuration/remapper.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/error.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commandLine.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/history/historyFile.ts"
        },
        {
            "source": "experiments/Vim/src/state/vimState.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/history/historyTracker.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/jumps/jump.ts"
        },
        {
            "source": "experiments/Vim/src/state/globalState.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/jumps.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/jumps/jumpTracker.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/mode/modeHandler.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/compositionState.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/remapState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/operator.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/motion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/languages/python/motion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/window.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/search.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/scroll.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/replace.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/put.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/insert.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/fold.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/commandLine.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/commands/actions.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/baseMotion.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/extensionBase.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/state/vimState.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/substitute.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/sort.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/shift.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/retab.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/put.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/print.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/move.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/leftRightCenter.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/gotoLine.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/goto.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/delete.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/copy.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/cmd_line/commands/bang.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/vimscript/lineRange.ts"
        },
        {
            "source": "experiments/Vim/src/actions/base.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/actions/base.ts"
        },
        {
            "source": "experiments/Vim/src/mode/modeHandler.ts",
            "type": "USAGE",
            "target": "experiments/Vim/src/actions/commands/actions.ts"
        }
    ]
}